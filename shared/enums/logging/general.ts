export enum TimeTracking{
    start='start',
    end='end'
}

export enum Context{
    API='api',
    SERVER='server',
    WORKER='worker',
    CRON='cron',
    DB='db'
}

export enum LogMessageTypes{
    DEBUG_OBJECT='DEBUG_OBJECT',
    LAMBDA_STARTED = 'LAMBDA_STARTED',
    LAMBDA_PROCESSING_SQS_MESSAGE='LAMBDA_PROCESSING_SQS_MESSAGE',
    API_EXECUTION_STARTED='API_EXECUTION_STARTED',
    SERVER_STARTED='SERVER_STARTED',
    API_EXECUTION_FINISHED='API_EXECUTION_FINISHED',
    API_UNEXPECTED_ERROR='API_UNEXPECTED_ERROR',
    API_REQ_BODY_VALIDATION_ERROR='API_REQ_BODY_VALIDATION_ERROR',
    API_REQ_HEADER_VALIDATION_ERROR='API_REQ_HEADER_VALIDATION_ERROR',
    API_RES_VALIDATION_ERROR='API_RES_VALIDATION_ERROR',
    EXTERNAL_API_REQ_PARAMS='EXTERNAL_API_REQ_PARAMS',
    EXTERNAL_API_RES='EXTERNAL_API_RES',
    EXTERNAL_API_ERROR='EXTERNAL_API_ERROR',
    DB_CONNECTION_SUCCESSFUL='DB_CONNECTION_SUCCESSFUL',
    DB_RECONNECTED='DB_RECONNECTED',
    DB_DISCONNECTED='DB_DISCONNECTED',
    DB_ERROR='DB_ERROR',
    CACHE_CONNECTION_SUCCESSFUL='CACHE_CONNECTION_SUCCESSFUL',
    CACHE_RECONNECTED='CACHE_RECONNECTED',
    CACHE_DISCONNECTED='CACHE_DISCONNECTED',
    CACHE_ERROR='CACHE_ERROR',
    CACHE_HIT='CACHE_HIT',
    CACHE_MISS='CACHE_MISS',
    PUBLISH_TO_SQS='PUBLISH_TO_SQS',
    PUBLISH_TO_SNS='PUBLISH_TO_SNS',
    DB_READ='DB_READ',
    DB_UPDATE='DB_UPDATE',
    DB_CREATE='DB_CREATE',
    DB_DELETE='DB_DELETE',
}